{"ast":null,"code":"var _jsxFileName = \"C:\\\\newCone\\\\frontend\\\\src\\\\Component\\\\Sign\\\\Sign.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../cssHelper/helper.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sign() {\n  _s();\n  const navigate = useNavigate();\n\n  // State for user data and error messages\n  const [userData, setUserData] = useState({\n    email: '',\n    password: ''\n  });\n  const [emailError, setEmailError] = useState({\n    required: false,\n    format: false\n  });\n  const [passwordError, setPasswordError] = useState({\n    required: false,\n    minLength: false\n  });\n\n  // Function to handle input changes and validate\n  const addUserData = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n\n    // Validate email\n    if (name === 'email') {\n      if (value.trim() === '') {\n        setEmailError({\n          required: true,\n          format: false\n        });\n      } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n        setEmailError({\n          required: false,\n          format: true\n        });\n      } else {\n        setEmailError({\n          required: false,\n          format: false\n        });\n      }\n    }\n\n    // Validate password\n    if (name === 'password') {\n      if (value.length === 0) {\n        setPasswordError({\n          required: true,\n          minLength: false\n        });\n      } else if (value.length < 8) {\n        setPasswordError({\n          required: false,\n          minLength: true\n        });\n      } else {\n        setPasswordError({\n          required: false,\n          minLength: false\n        });\n      }\n    }\n  };\n\n  // Function to handle sign up\n  const signUp = async () => {\n    // Check if there are any validation errors\n    if (emailError.required || emailError.format || passwordError.required || passwordError.minLength) {\n      return; // If there are errors, do not proceed with sign up\n    }\n    try {\n      const response = await fetch('http://localhost:4000/signup', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n      if (responseData.success) {\n        window.location.replace('/account/login');\n      } else {\n        alert(responseData.error);\n      }\n    } catch (err) {\n      alert('Error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper account-wrapper radius flex flex-column a-center j-center gap pad shadow black-clr white-bg w-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_s(Sign, \"fu4db4bLyT1tQ9grkXYoBX64ICc=\", false, function () {\n  return [useNavigate];\n});\n_c = Sign;\nexport default Sign;\nvar _c;\n$RefreshReg$(_c, \"Sign\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Sign","_s","navigate","userData","setUserData","email","password","emailError","setEmailError","required","format","passwordError","setPasswordError","minLength","addUserData","e","name","value","target","trim","test","length","signUp","response","fetch","method","headers","Accept","body","JSON","stringify","responseData","json","console","log","success","window","location","replace","alert","error","err","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/newCone/frontend/src/Component/Sign/Sign.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../cssHelper/helper.css';\r\n\r\nfunction Sign() {\r\n    const navigate = useNavigate();\r\n\r\n    // State for user data and error messages\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [emailError, setEmailError] = useState({\r\n        required: false,\r\n        format: false\r\n    });\r\n\r\n    const [passwordError, setPasswordError] = useState({\r\n        required: false,\r\n        minLength: false\r\n    });\r\n\r\n    // Function to handle input changes and validate\r\n    const addUserData = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserData({\r\n            ...userData,\r\n            [name]: value\r\n        });\r\n\r\n        // Validate email\r\n        if (name === 'email') {\r\n            if (value.trim() === '') {\r\n                setEmailError({\r\n                    required: true,\r\n                    format: false\r\n                });\r\n            } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\r\n                setEmailError({\r\n                    required: false,\r\n                    format: true\r\n                });\r\n            } else {\r\n                setEmailError({\r\n                    required: false,\r\n                    format: false\r\n                });\r\n            }\r\n        }\r\n\r\n        // Validate password\r\n        if (name === 'password') {\r\n            if (value.length === 0) {\r\n                setPasswordError({\r\n                    required: true,\r\n                    minLength: false\r\n                });\r\n            } else if (value.length < 8) {\r\n                setPasswordError({\r\n                    required: false,\r\n                    minLength: true\r\n                });\r\n            } else {\r\n                setPasswordError({\r\n                    required: false,\r\n                    minLength: false\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    // Function to handle sign up\r\n    const signUp = async () => {\r\n        // Check if there are any validation errors\r\n        if (emailError.required || emailError.format || passwordError.required || passwordError.minLength) {\r\n            return; // If there are errors, do not proceed with sign up\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:4000/signup', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n            });\r\n\r\n            const responseData = await response.json();\r\n            console.log(responseData);\r\n\r\n            if (responseData.success) {\r\n                window.location.replace('/account/login');\r\n            } else {\r\n                alert(responseData.error);\r\n            }\r\n        } catch (err) {\r\n            alert('Error:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-wrapper account-wrapper radius flex flex-column a-center j-center gap pad shadow black-clr white-bg w-full\">\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sign;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC;IACzCa,QAAQ,EAAE,KAAK;IACfC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC;IAC/Ca,QAAQ,EAAE,KAAK;IACfI,SAAS,EAAE;EACf,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCd,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAACa,IAAI,GAAGC;IACZ,CAAC,CAAC;;IAEF;IACA,IAAID,IAAI,KAAK,OAAO,EAAE;MAClB,IAAIC,KAAK,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACrBX,aAAa,CAAC;UACVC,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE;QACZ,CAAC,CAAC;MACN,CAAC,MAAM,IAAI,CAAC,cAAc,CAACU,IAAI,CAACH,KAAK,CAAC,EAAE;QACpCT,aAAa,CAAC;UACVC,QAAQ,EAAE,KAAK;UACfC,MAAM,EAAE;QACZ,CAAC,CAAC;MACN,CAAC,MAAM;QACHF,aAAa,CAAC;UACVC,QAAQ,EAAE,KAAK;UACfC,MAAM,EAAE;QACZ,CAAC,CAAC;MACN;IACJ;;IAEA;IACA,IAAIM,IAAI,KAAK,UAAU,EAAE;MACrB,IAAIC,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;QACpBT,gBAAgB,CAAC;UACbH,QAAQ,EAAE,IAAI;UACdI,SAAS,EAAE;QACf,CAAC,CAAC;MACN,CAAC,MAAM,IAAII,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;QACzBT,gBAAgB,CAAC;UACbH,QAAQ,EAAE,KAAK;UACfI,SAAS,EAAE;QACf,CAAC,CAAC;MACN,CAAC,MAAM;QACHD,gBAAgB,CAAC;UACbH,QAAQ,EAAE,KAAK;UACfI,SAAS,EAAE;QACf,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;;EAED;EACA,MAAMS,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB;IACA,IAAIf,UAAU,CAACE,QAAQ,IAAIF,UAAU,CAACG,MAAM,IAAIC,aAAa,CAACF,QAAQ,IAAIE,aAAa,CAACE,SAAS,EAAE;MAC/F,OAAO,CAAC;IACZ;IAEA,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACLC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC3B,QAAQ;MACjC,CAAC,CAAC;MAEF,MAAM4B,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;MAEzB,IAAIA,YAAY,CAACI,OAAO,EAAE;QACtBC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,gBAAgB,CAAC;MAC7C,CAAC,MAAM;QACHC,KAAK,CAACR,YAAY,CAACS,KAAK,CAAC;MAC7B;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVF,KAAK,CAAC,QAAQ,EAAEE,GAAG,CAAC;IACxB;EACJ,CAAC;EAED,oBACI1C,OAAA;IAAK2C,SAAS,EAAC;EAAkH;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5H,CAAC;AAEd;AAAC7C,EAAA,CAvGQD,IAAI;EAAA,QACQH,WAAW;AAAA;AAAAkD,EAAA,GADvB/C,IAAI;AAyGb,eAAeA,IAAI;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}