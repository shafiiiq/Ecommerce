{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Initial state for the account slice\nconst accountInitialState = {\n  isLoggedIn: false,\n  showNavbar: true,\n  showSign: false,\n  showLogin: true\n};\n\n// Create account slice\nconst accountSlice = createSlice({\n  name: \"account\",\n  initialState: accountInitialState,\n  reducers: {\n    showAccount: state => {\n      state.isLoggedIn = true;\n      state.showNavbar = false;\n    },\n    hideAccount: state => {\n      state.isLoggedIn = false;\n      state.showNavbar = true;\n    },\n    resetNavbar: state => {\n      state.showNavbar = true;\n    },\n    showSign: state => {\n      state.showSign = true;\n      state.showLogin = false;\n    },\n    showLogin: state => {\n      state.showLogin = true;\n      state.showSign = false;\n    }\n  }\n});\n\n// Initial state for the cart slice\nconst cartInitialState = {\n  count: 0\n};\n\n// Create cart slice\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: cartInitialState,\n  reducers: {\n    setCartCount: state => {}\n  }\n});\n\n// Export actions from slices\nexport const {\n  showAccount,\n  hideAccount,\n  resetNavbar,\n  showLogin,\n  showSign\n} = accountSlice.actions;\nexport const {\n  increment,\n  decrement\n} = cartSlice.actions;\n\n// Export reducers\nexport const accountReducer = accountSlice.reducer;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"names":["createSlice","accountInitialState","isLoggedIn","showNavbar","showSign","showLogin","accountSlice","name","initialState","reducers","showAccount","state","hideAccount","resetNavbar","cartInitialState","count","cartSlice","setCartCount","actions","increment","decrement","accountReducer","reducer","cartReducer"],"sources":["C:/E-commerce/frontend/src/redux/account.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Initial state for the account slice\r\nconst accountInitialState = {\r\n    isLoggedIn: false,\r\n    showNavbar: true,\r\n    showSign: false,\r\n    showLogin: true,\r\n};\r\n\r\n// Create account slice\r\nconst accountSlice = createSlice({\r\n    name: \"account\",\r\n    initialState: accountInitialState,\r\n    reducers: {\r\n        showAccount: (state) => {\r\n            state.isLoggedIn = true;\r\n            state.showNavbar = false;\r\n        },\r\n        hideAccount: (state) => {\r\n            state.isLoggedIn = false;\r\n            state.showNavbar = true;\r\n        },\r\n        resetNavbar: (state) => {\r\n            state.showNavbar = true;\r\n        },\r\n        showSign: (state) => {\r\n            state.showSign = true;\r\n            state.showLogin = false;\r\n        },\r\n        showLogin: (state) => {\r\n            state.showLogin = true;\r\n            state.showSign = false;\r\n        },\r\n    },\r\n});\r\n\r\n// Initial state for the cart slice\r\nconst cartInitialState = {\r\n    count: 0,\r\n};\r\n\r\n// Create cart slice\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: cartInitialState,\r\n    reducers: {\r\n        setCartCount: (state) => {\r\n            \r\n        }\r\n    },\r\n});\r\n\r\n// Export actions from slices\r\nexport const {\r\n    showAccount,\r\n    hideAccount,\r\n    resetNavbar,\r\n    showLogin,\r\n    showSign,\r\n} = accountSlice.actions;\r\n\r\nexport const { increment, decrement } = cartSlice.actions;\r\n\r\n// Export reducers\r\nexport const accountReducer = accountSlice.reducer;\r\nexport const cartReducer = cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,mBAAmB,GAAG;EACxBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEP,mBAAmB;EACjCQ,QAAQ,EAAE;IACNC,WAAW,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACT,UAAU,GAAG,IAAI;MACvBS,KAAK,CAACR,UAAU,GAAG,KAAK;IAC5B,CAAC;IACDS,WAAW,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACT,UAAU,GAAG,KAAK;MACxBS,KAAK,CAACR,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDU,WAAW,EAAGF,KAAK,IAAK;MACpBA,KAAK,CAACR,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDC,QAAQ,EAAGO,KAAK,IAAK;MACjBA,KAAK,CAACP,QAAQ,GAAG,IAAI;MACrBO,KAAK,CAACN,SAAS,GAAG,KAAK;IAC3B,CAAC;IACDA,SAAS,EAAGM,KAAK,IAAK;MAClBA,KAAK,CAACN,SAAS,GAAG,IAAI;MACtBM,KAAK,CAACP,QAAQ,GAAG,KAAK;IAC1B;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMU,gBAAgB,GAAG;EACrBC,KAAK,EAAE;AACX,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC1BO,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEM,gBAAgB;EAC9BL,QAAQ,EAAE;IACNQ,YAAY,EAAGN,KAAK,IAAK,CAEzB;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EACTD,WAAW;EACXE,WAAW;EACXC,WAAW;EACXR,SAAS;EACTD;AACJ,CAAC,GAAGE,YAAY,CAACY,OAAO;AAExB,OAAO,MAAM;EAAEC,SAAS;EAAEC;AAAU,CAAC,GAAGJ,SAAS,CAACE,OAAO;;AAEzD;AACA,OAAO,MAAMG,cAAc,GAAGf,YAAY,CAACgB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGP,SAAS,CAACM,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}